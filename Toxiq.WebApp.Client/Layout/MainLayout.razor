@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components
@using Toxiq.Mobile.Dto
@using Toxiq.WebApp.Client.Services.Authentication
@using Toxiq.WebApp.Client.Components
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation
@implements IDisposable

<div class="page">
    <ToxiqSidebar />
    <ToxiqRightSidebar /> 
    <main>   
        <article class="content">
            @Body
        </article>
    </main>
</div>

@code {
    private bool isAuthenticated = false;
    private UserProfile currentUser;

    protected override async Task OnInitializedAsync()
    {
        AuthService.AuthenticationStateChanged += OnAuthenticationStateChanged;
        await CheckAuthenticationState();
    }

    private async Task CheckAuthenticationState()
    {
        try
        {
            isAuthenticated = await AuthService.IsAuthenticatedAsync();
            if (isAuthenticated)
            {
                currentUser = await AuthService.GetCurrentUserAsync();
            }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error checking auth state: {ex.Message}");
        }
    }

    private void OnAuthenticationStateChanged(object sender, AuthenticationStateChangedEventArgs e)
    {
        isAuthenticated = e.IsAuthenticated;
        currentUser = e.User;
        InvokeAsync(StateHasChanged);
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/");
    }

    private void ShowUserMenu()
    {
        if (currentUser?.UserName != null)
        {
            Navigation.NavigateTo($"/profile/{currentUser.UserName}");
        }
    }

    private void GoHome()
    {
        Navigation.NavigateTo($"/");
    }

    public void Dispose()
    {
        AuthService.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}