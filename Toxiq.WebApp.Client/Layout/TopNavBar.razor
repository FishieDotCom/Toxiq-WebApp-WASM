@using Microsoft.FluentUI.AspNetCore.Components
@using Icons = Microsoft.FluentUI.AspNetCore.Components.Icons
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<!-- Top Navigation Bar - Matching Mobile App Design -->
<div class="top-nav-bar">
    <!-- Back Button Section -->
    <div class="nav-section nav-left">
        @if (ShowBackButton)
        {
            <button class="nav-back-button" onclick="history.back()">
                <FluentIcon Value="@(new Icons.Regular.Size24.ArrowLeft().WithColor("#ffffff"))" />
            </button>
        }
        else
        {
            <div class="nav-spacer"></div>
        }
    </div>

    <!-- Middle Content / Page Title -->
    <div class="nav-section nav-center">
        @if (MiddleContent != null)
        {
            @MiddleContent
        }
        else if (!string.IsNullOrEmpty(PageTitle))
        {
            <h1 class="nav-title">@PageTitle</h1>
        }
    </div>

    <!-- Extra Options Section -->
    <div class="nav-section nav-right">
        @if (ExtraOptions != null)
        {
            @ExtraOptions
        }
        else
        {
            <div class="nav-spacer"></div>
        }
    </div>
</div>

@code {
    /// <summary>
    /// Controls whether the back button is visible
    /// </summary>
    [Parameter] public bool ShowBackButton { get; set; } = false;

    /// <summary>
    /// Page title text (used if MiddleContent is not provided)
    /// </summary>
    [Parameter] public string? PageTitle { get; set; }

    /// <summary>
    /// Custom content for the middle section (overrides PageTitle)
    /// </summary>
    [Parameter] public RenderFragment? MiddleContent { get; set; }

    /// <summary>
    /// Custom content for the right section (extra options)
    /// </summary>
    [Parameter] public RenderFragment? ExtraOptions { get; set; }

    /// <summary>
    /// Custom back button click handler (defaults to Navigation.Back())
    /// </summary>
    [Parameter] public EventCallback OnBackButtonClick { get; set; }

    /// <summary>
    /// Additional CSS classes to apply to the nav bar
    /// </summary>
    [Parameter] public string? AdditionalClasses { get; set; }

    private async Task HandleBackButtonClick()
    {
        if (OnBackButtonClick.HasDelegate)
        {
            await OnBackButtonClick.InvokeAsync();
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("history.back()");
        }
    }
}

<style>
    /* Top Navigation Bar - Matching Mobile App Design */
    .top-nav-bar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 12px 16px;
        background-color: var(--black, #121212);
        color: var(--white, #ffffff);
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 1px solid var(--transparent-white, rgba(255, 255, 255, 0.1));
        backdrop-filter: blur(10px);
        min-height: 56px;
        box-sizing: border-box;
    }

    /* Navigation Sections */
    .nav-section {
        display: flex;
        align-items: center;
        min-width: 48px;
    }

    .nav-left {
        justify-content: flex-start;
    }

    .nav-center {
        flex: 1;
        justify-content: center;
        text-align: center;
        max-width: calc(100% - 96px); /* Account for left and right sections */
    }

    .nav-right {
        justify-content: flex-end;
    }

    /* Back Button */
    .nav-back-button {
        background: none;
        border: none;
        color: var(--white, #ffffff);
        font-size: 24px;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        transition: background-color 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
    }

        .nav-back-button:hover {
            background-color: var(--hover-overlay, rgba(255, 255, 255, 0.1));
        }

        .nav-back-button:active {
            background-color: var(--active-overlay, rgba(255, 255, 255, 0.2));
        }

    /* Page Title */
    .nav-title {
        font-size: 18px;
        font-weight: 600;
        color: var(--white, #ffffff);
        margin: 0;
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }

    /* Spacer for layout balance */
    .nav-spacer {
        width: 40px;
        height: 40px;
    }

    /* Responsive adjustments */
    @@media (max-width: 480px) {
        .top-nav-bar

    {
        padding: 8px 12px;
    }

    .nav-title {
        font-size: 16px;
    }

    }

    /* Dark theme support */
    @@media (prefers-color-scheme: dark) {
        .top-nav-bar

    {
        background-color: var(--off-black, #121212);
        color: var(--white, #ffffff);
        border-bottom-color: var(--transparent-white, rgba(255, 255, 255, 0.1));
    }

    }

    /* High contrast mode support */
    @@media (prefers-contrast: high) {
        .top-nav-bar

    {
        border-bottom-width: 2px;
    }

    .nav-back-button:focus {
        outline: 2px solid var(--white, #ffffff);
        outline-offset: 2px;
    }

    }
</style>